@import "mixin.scss";
@import "colors.scss";


*{
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}
a{
  text-decoration: none;
  cursor: pointer;
}
input[type="radio"], input[type="checkbox"]{display: none;}
input:focus{outline: none;}
::-webkit-scrollbar{width: 4px; height: 4px;}
::-webkit-scrollbar-thumb{width: $min; transition: .1s; background-color: #666}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
loading{
  @include flexCC;
  width: 100vw;
  height: 100vh;
  position: fixed;
  background: #444;
  overflow-y: hidden;
  overflow-x: hidden;
  z-index: 100000;
  &:after{
    content: "";
    width: $Wx8;
    height: $Wx8;
    background-image: url(https://image.flaticon.com/icons/svg/1437/1437788.svg);
    @include bgCC;
    animation: rotate 2s linear infinite;
    opacity: .6;
  }
}
body{
  font-family: "Benton Sans", "Helvetica Neue", helvetica, arial, sans-serif;
  font-size: $font;
  display: flex;
  align-items: center;
  flex-direction: column;
  overflow-y: scroll;
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  header{
    display: flex;
    justify-content: center;
    align-items: flex-end;
    text-align: center;
    height: $Wx4;
    width: $width;
    position: relative;
    font-size: $fontBig;
    z-index: 15;   
  }
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  main{
    height: 100%;
    width: $width;
    z-index: 5;
    position: static;
    top: $Wx8;
    #awayMove{
      width: $min;
      height: $min;
      position: absolute;
      z-index: 100;
      top: 0px;
      left: 0px;
      cursor: none;
    }  
    ul{
      padding: $Wx4 0; 
      width: 100%;
      height: 100%;
      min-height: calc(100vh - #{$Wx4});
      position: relative;
      list-style: none;
      display: grid;
      gap: $Wx4;
      li{
        list-style: none;
        display: flex;
        flex-direction: column;
        position: relative; 
        width: 100%;
        &:hover h8 .allMaxLine>dot:not([hover="1"]){
          width: $Wx1;
          transform: translateX(0);
          opacity: 1;
          &:hover{
            width: calc(#{$width} - #{$Wx1} - #{$min} / 2);
            &:after{opacity: 1}
            &:before{display: flex;}
          }
        }
        h4{ 
          width: inherit;
          height: $Wx2;
          position: absolute;
          transform: translateY(#{$-Wx2});
          z-index: 1;
          &.old{
            filter: grayscale(1);
            &:hover{filter: grayscale(0);}
          }   
          a[date]{
            width: $Wx4;
            height: inherit;
            position: absolute;
            display: flex;
            top: 0;
            left: calc(#{$-Wx4} * 1.1);
            &:after{
              content: attr(date);
              font-size: $font;
              white-space: nowrap;
              position: absolute;
              display: flex;
              align-items: center;
              right: $-Wx1;
            }
            &:hover:after{
              content: attr(fulldate);
              cursor: default;
            }
          }
          a[target]{
            height: inherit;
            position: absolute;
            left: $Wx1;
            &:after{content: ":"attr(totalsum);}
          }
        }
        h8{
          width: inherit;
          display: flex;
          flex-direction: column;
          .graphX{
            height: calc(100% - #{$Wx1});
            width: calc(#{$width} - #{$Wx2});
            left: $Wx1;
            overflow: hidden;
            position: relative;
            canvas{
              height: inherit;
              overflow-y: hidden;
              overflow-x: hidden;
              position: relative;
              &.graphAim{
                width: inherit;
                position: absolute;
                top: 0;
              }
            }
          }  
          .allMaxLine{
            position: absolute;
            height: inherit;
            width: $min;
            left: 0;
            bottom: 0;
            >dot{
              &[hover="1"]{
                width: calc(#{$width} - #{$Wx1} - #{$min} / 2);
                transform: translateX(0);
                opacity: 1;
              }
              width: calc(#{$width} - #{$Wx2} - #{$min} / 2);
              transform: translateX($Wx1);
              opacity: .15;
              position: absolute;
              height: $min;
              cursor: pointer;
              font-weight: bold;
              &:after, &:before{
                font-size: calc(#{$Wx1} + #{$min});
                top: calc(#{$-Wx1} - #{$min} * 2);
                height: calc(#{$Wx1} + #{$min});
                position: absolute;
              }
              &:after{
                content: attr(alt);
                left: $Wx2;
                text-align: left;
                opacity: 0;
              }
              &:before{
                display: none;
                content: attr(memeName);
                right: $Wx1;
                text-align: right;
              }
            }
          }
          .mainMenu{
            width: $Wx1;
            height: $Wx1;
            clip-path: polygon(0 0, 0 100%, calc(100% - #{$Wx1}) 100%, 100% calc(100% - #{$Wx1}), 100% 0);
            position: absolute;
            bottom: 0;
            right: 0;
            overflow: hidden;
            transition: .25s;
            z-index: 1;
            &:hover{
              width: calc(#{$Wx12} + #{$Wx1});
              height: 100%;
            }
            >div{
              width: calc(#{$Wx12} + #{$Wx1});
              height: 100%;
            }
          }
          input[type="range"]{
            -webkit-appearance: none;  
            position: absolute;
            cursor: pointer;
            &[name="rightRange"]{            
              top: calc(#{$Wx8} + #{$Wx1});
              right: calc(#{$-Wx8} - #{$Wx1});
              width: calc(#{$Wx20} - #{$Wx1});
              transform: rotate(90deg);
              &::-webkit-slider-runnable-track{
                height: $Wx1;
                overflow: hidden;
              }
              &::-webkit-slider-thumb{
                height: $Wx1;
                width: $Wx4;
                -webkit-appearance: none;
                cursor: ns-resize;
              }
            }
            &[name="bottomRange"]{
              bottom: $Wx1;
              width: calc(#{$width} - #{$Wx2});
              transform: translateY($Wx1) translateX($Wx1);
              &::-webkit-slider-runnable-track{
                height: $Wx1;
                overflow: hidden;
                transition: .25s;
              }
              &::-webkit-slider-thumb{
                height: $Wx1;
                width: $Wx12;
                -webkit-appearance: none;
                cursor: ew-resize;
              }
              &:after, &:before{
                position: absolute;
                transition: .25s;
              }
              &:after{
                content: attr(percent)"%";
                font-size: $font;
                white-space: nowrap;
                font-weight: bold;
                height: $Wx2;
                right: calc(100% + #{$Wx1} + #{$min});
                top: calc(#{$Wx1} - #{$font});
              }
              &:before{
                content: "";
                width: $Wx1;
                height: $Wx1;
                clip-path: polygon(0 0, 0 100%, calc(100% - #{$Wx1}) 100%, 100% calc(100% - #{$Wx1}), 100% 0);
                transform: rotate(90deg);
                background-color: var(--dark5);
                right: 100%;
                top: 0;
              }
            }          
          }   
          &[meme][sum]:after{
            content: attr(meme)":["attr(sum)"]";
            font-size: $font;
            white-space: nowrap;
            font-weight: bold;
            height: $Wx2;
            position: absolute;
            right: $Wx2;
            top: $-Wx2;
            display: flex;
            justify-content: flex-end;
          }
          &[meme][sum]:before{
            content: "";
            width: $font;
            height: calc(#{$Wx1} + #{$min} / 2);
            position: absolute;
            right: calc((#{$Wx1} - #{$min}) / 2);
            top: calc((#{$Wx1} + #{$min} / 2) * -1);
            clip-path: polygon(0 0, 100% 0, 100% 100%, calc(100% - #{$min}) 100%, calc(100% - #{$min}) $min, 0 $min);
          }
        }   
        h9{
          color: var(--dark4);
          font-size: $font;
          font-weight: bold;
          >div{
            opacity: 0;
            display: flex;
            justify-content: center;
            align-items: center;
            position: relative;
            margin: 0 $Wx1 calc(#{$Wx1} / 2) 0;
            height: $Wx2;
            background: var(--dark7);
            color: var(--red);
            @for $i from 1 through 8 {
              &:nth-child(#{$i}){opacity: calc(1 - #{$i} / 8)}            
            }
          }
        }
        &[type="main"]{
          min-height: $Wx20;
          h8{height: 100%;}
        }
        &[type="comments"]{
          h8{
            div:not([delete]){
              width: calc(#{$width} - #{$Wx2});
              min-height: calc(#{$Wx2} + #{$min} * 2);
              transform: translateX($Wx1);
              display: flex;
              font-size: $font;
              background-color: var(--dark7);
              padding: $min calc(#{$Wx1} / 2);
              margin: calc(#{$min} * 2) 0;
              &:nth-child(1){margin: $min 0 calc(#{$min} * 2) 0;}
              &:hover{
                background-color: var(--colorLight);
                a{color: var(--colorDark);}
                div[delete]:after{opacity: .25}
              }
              &:nth-last-child(1) a:after{
                clip-path: polygon(
                  calc((#{$Wx1} - #{$min}) / 2) 0,
                  calc(100% - (#{$Wx1} - #{$min}) / 2) 0,
                  calc(100% - (#{$Wx1} - #{$min}) / 2) calc(50% + #{$min} / 2),
                  0 calc(50% + #{$min} / 2),
                  0 calc(50% - #{$min} / 2),
                  calc((#{$Wx1} - #{$min}) / 2) calc(50% - #{$min} / 2),
                );            
              }
              >a{
                color: var(--colorMiddle);
                text-align: start; 
                width: 100%;
                &:after{
                  content: "";
                  width: $Wx1;
                  height: calc(100% + #{$min}*4);
                  position: absolute;
                  right: $-Wx1;
                  top: calc(#{$min} * -1);
                  background-color: var(--dark3);
                  clip-path: polygon(
                    calc((#{$Wx1} - #{$min}) / 2) 0,
                    calc(100% - (#{$Wx1} - #{$min}) / 2) 0,
                    calc(100% - (#{$Wx1} - #{$min}) / 2) 100%,
                    calc((#{$Wx1} - #{$min}) / 2) 100%,
                    calc((#{$Wx1} - #{$min}) / 2) calc(50% - #{$min} / 2),
                    0 calc(50% - #{$min} / 2),
                    0 calc(50% + #{$min} / 2),
                    calc((#{$Wx1} - #{$min}) / 2) calc(50% + #{$min} / 2),
                  );
                }
              } 
              div[delete]{
                width: $Wx2;
                height: 100%;
                position: absolute;
                top: 0;
                left: $-Wx2;
                cursor: pointer;
                &:hover:after{opacity: .6;}
                &:after{
                  content: "";
                  height: $Wx1;
                  width: inherit;
                  position: absolute;
                  left: 0;
                  opacity: 0;
                  top: calc(50% - #{$Wx1} / 2);
                  background-image: url('https://image.flaticon.com/icons/svg/32/32178.svg');
                  background-size: $Wx1;
                  background-position: center;
                  background-repeat: no-repeat;
                }
              }   
            }
          }        
        }
        &[type="settings"]{
          &[for="cookieRightFilter"], &[content="UTC"]{height: $Wx4}
          &[content$="Add"]{h8{&:before{height: 0}}}
          &[content="streamers"], &[content="main"]{min-height: calc(100vh - #{$Wx4} * 7.75)}       
          input[type="range"]{
            -webkit-appearance: none;  
            position: absolute;
            cursor: pointer;
            width: calc(100% - #{$Wx1});
            margin-top: $min;
            &::-webkit-slider-runnable-track{
              height: $Wx1;
              overflow: hidden;
              transition: .25s;
            }
            &::-webkit-slider-thumb{
              height: $Wx2;
              width: $Wx12;
              -webkit-appearance: none;
              cursor: ew-resize;
            }
            &:after{
              position: absolute;
              content: attr(deg)"°";
              font-size: $font;
              white-space: nowrap;
              font-weight: bold;
              height: $Wx2;
              right: 0;
              top: $-Wx2;
            }     
            &.UTCRange:after{content: attr(deg)" UTC";}
          }
          input[type="checkbox"]{
            &+label[icon]{
              margin-left: $Wx1;    
            }
          }
          h4>div[tracking]{
            color: var(--color1);
            position: absolute;
            text-align: center;
            right: calc(#{$Wx12} + #{$Wx2});
            cursor: pointer;
            top: 0;
          }
          h4[display="0"]{display: none}
          h8>div{
            display: flex;
            width: inherit;
            height: $Wx4;
            margin-bottom: $Wx1;
            position: relative;
            &[group]>a{width: calc(#{$Wx1} * 26)}
            &[group]>input[type="text"]{width: calc(#{$Wx1} * 26); margin-left: $Wx1}
            input[type="text"], >a{
              width: calc(#{$width} - #{$Wx4} * 8.5);
              &[onkeypress*="Main"]{width: calc(#{$width} - #{$Wx4} * 6.75);}
              height: inherit;
              display: flex;
              align-items: center;    
              position: relative;
              outline: 0;
              border: 0;
              font-size: $font;
              font-weight: bold;
              color: rgba(0, 0, 0, .5);
              padding: 0 $font;
            }
            &:not([class$="Add"]):before{
              content: "";
              width: $Wx1;
              height: calc(100% + #{$Wx2});
              position: absolute;
              right: 0;
              bottom: $-Wx1;
              background-color: var(--dark3);
              clip-path: polygon(
                calc((#{$Wx1} - #{$min}) / 2) 0,
                calc(100% - (#{$Wx1} - #{$min}) / 2) 0,
                calc(100% - (#{$Wx1} - #{$min}) / 2) 100%,
                calc((#{$Wx1} - #{$min}) / 2) 100%,
                calc((#{$Wx1} - #{$min}) / 2) calc(50% - #{$min} / 2),
                0 calc(50% - #{$min} / 2),
                0 calc(50% + #{$min} / 2),
                calc((#{$Wx1} - #{$min}) / 2) calc(50% + #{$min} / 2),
              );
            }
            &:nth-of-type(1):before{
              height: calc(100% + #{$Wx12} - #{$Wx1} + #{$min});
              right: calc((#{$Wx1} - #{$min}) / 2);
              clip-path: polygon(
                0 0, 
                100% 0, 
                100% 100%, 
                calc(100% - #{$min}) 100%, 
                calc(100% - #{$min}) calc((100% - #{$Wx3}) - #{$min} / 2),
                calc((#{$Wx1} - #{$min}) / 2) calc((100% - #{$Wx3}) - #{$min} / 2),
                calc((#{$Wx1} - #{$min}) / 2) calc((100% - #{$Wx3}) + #{$min} / 2),
                calc(100% - #{$min}) calc((100% - #{$Wx3}) + #{$min} / 2),
                calc(100% - #{$min}) $min, 
                0 $min
              );
            }          
            &:nth-last-of-type(1):before{
              clip-path: polygon(
                calc((#{$Wx1} - #{$min}) / 2) 0,
                calc(100% - (#{$Wx1} - #{$min}) / 2) 0,
                calc(100% - (#{$Wx1} - #{$min}) / 2) calc(50% + #{$min} / 2),
                0 calc(50% + #{$min} / 2),
                0 calc(50% - #{$min} / 2),
                calc((#{$Wx1} - #{$min}) / 2) calc(50% - #{$min} / 2),
              );  
            }
            &:nth-last-of-type(1):nth-of-type(1):before{
              height: calc(100% + #{$Wx12} - #{$Wx1} + #{$min});
              right: calc((#{$Wx1} - #{$min}) / 2);
              clip-path: polygon(
                0 0, 
                100% 0, 
                100% calc((100% - #{$Wx3}) + #{$min} / 2),
                calc((#{$Wx1} - #{$min}) / 2) calc((100% - #{$Wx3}) + #{$min} / 2),
                calc((#{$Wx1} - #{$min}) / 2) calc((100% - #{$Wx3}) - #{$min} / 2),
                calc(100% - #{$min}) calc((100% - #{$Wx3}) - #{$min} / 2),
                calc(100% - #{$min}) $min, 
                0 $min
              );            
            }
            .add, .delete{
              filter: hue-rotate(0deg);
              margin-left: $Wx1;
              &:hover:before{opacity: .6}
              &:before{opacity: 1}
            }
            [for="mainAddActive"]{margin-left: $Wx1}
            &[new]>a{
              color: var(--green);
              &:after{
                content: "";
                height: inherit;
                width: $Wx4;
                right: 0;
                position: absolute;
                background-color: var(--green);
                clip-path: polygon(0 0, calc(100% - #{$Wx2}) 0, 100% calc(100% - #{$Wx2}), 100% 100%);
              } 
            }     
          }
          h8>nav{
            min-height: $Wx4;
            width: calc(100% - #{$Wx1});
            background: #0001;
            margin-right: $Wx1;
            &:not(:nth-last-of-type(1)):before{
              content: "";
              width: $Wx1;
              height: inherit;
              position: absolute;
              right: 0;
              background-color: var(--dark3);
              clip-path: polygon(
                calc((#{$Wx1} - #{$min}) / 2) 0,
                calc(100% - (#{$Wx1} - #{$min}) / 2) 0,
                calc(100% - (#{$Wx1} - #{$min}) / 2) 100%,
                calc((#{$Wx1} - #{$min}) / 2) 100%,
              );
            }
            wrap{
              width: 100%;
              height: $Wx4;
              margin-bottom: $Wx1;
              display: flex;
              >a{width: $Wx12;}
              >input[type="text"]{width: $Wx12;}
            }
          }
        }
      }
      #resEmpty{
        @include flexCC;
        height: $Wx20;
      } 
      .reset{
        position: absolute;
        bottom: 0;
        margin-left: calc(#{$width} - #{$Wx12} - #{$Wx1});
        &[onclick^="save"]{margin-left: calc(#{$width} - #{$Wx4} * 6.5);}
      }
    }
  }
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// 
  .scrollTop{
    width: calc(50vw - (#{$width} / 2 + #{$Wx4} + #{$Wx1} + #{$min}));
    height: 100vh;
    position: fixed;
    z-index: 0;
    bottom: 0;  
    right: 0;   
    cursor: pointer;    
    &:hover:before{opacity: 1}
    &:before{
      transition: .5s;
      content: "";
      height: inherit;
      width: $Wx4;
      position: absolute;
      right: 0;
      top: 0;
      opacity: 0;
    }
  }
  .rightMenu{
    display: flex;
    align-items: center;
    flex-direction: column;
    position: fixed;
    z-index: 10;
    right: calc(50vw - (#{$width} / 2 + #{$Wx4} + #{$Wx1} + #{$min}));
    width: $Wx4;  
    height: 100vh;
    &:hover+.rightFilter{
      opacity: .25;
      animation: hide .25s alternate;
      >div>a>input[type="radio"]+label[for$="Max"]:after{color: #0000}      
    }
    input:not([name="lang"]){
      &:checked+label:after{opacity: .8;}  
      &:checked+label[for="getTheme"]:after{
        @include bgImg;
        filter: invert(1);
      }
      &[id="autoload"]{
        &:checked+label[for="autoload"]{
          &:after{animation: rotate 2s linear infinite;}
          &:hover:before{content: "["attr(number)"] "attr(name);}
          &:before{
            content: "["attr(number)"]";
            opacity: 1; 
            transform: translateX(calc(#{$Wx4} + #{$Wx1})) translateY(calc(#{$min} + #{$Wx1}));
          }
        }      
        +label[for="autoload"]{
          transition: .1s;
          &:before{content: "["attr(number)"] "attr(name);}
        }
      } 
    }        
    .topMenu{z-index: 1;} 
    .topMenu, .bottomMenu{
      display: flex;
      align-items: center;
      flex-direction: column;
      position: absolute;
      top: $Wx8;
      width: $Wx4;   
    }     
    .getLang{
      width: $Wx4;
      min-height: $Wx2;
      position: absolute;
      font-weight: bold;
      top: calc(#{$Wx4} + #{$Wx2});  
      padding-top: $Wx2;
      &:hover{z-index: 2}
      &:before{
        content: "";
        width: inherit;
        height: $Wx1;
        position: absolute;
        bottom: $-Wx1;
      }
      input[type="radio"]{
        &:checked+label{
          position: absolute;
          top: 0;
        }
        +label{
          width: $Wx4;
          height: $Wx2;
          @include flexCC;
          cursor: pointer; 
        }
      }
    }
    &:before{
      content: "";
      width: inherit;
      height: inherit;
      position: absolute;
    }
  } 
  .rightFilter{
    position: fixed;
    height: 100vh;
    max-width: $Wx20;
    width: calc(50vw - (#{$width} / 2 + #{$Wx8} + #{$Wx1} + #{$min}));
    top: 0;
    z-index: 11;
    left: calc(50vw + (#{$width} / 2 + #{$Wx4} + #{$Wx1} - #{$min}));
    transition: .25s;
    overflow-y: scroll;
    overflow-x: hidden; 
    &::-webkit-scrollbar{width: 0}
    &:before{
      content: "";
      width: inherit;
      height: inherit;
      max-width: $Wx20;
      opacity: .5;
      position: fixed;
      top: 0;
      z-index: -1;
      overflow-x: hidden;
    } 
    >div{
      width: inherit;
      display: block;
      height: max-content;
      min-height: 100vh;
      padding-bottom: $Wx4;
    }
    input[type="radio"]{
      &:checked+label[for$="Max"]{
        &:before, &:after{opacity: .6}
      }  
      &+label[for$="Max"]{
        width: 100%;
        &:after{transition: .25s}
      }
    }
    #resetAll{
      width: 100%;
      position: absolute;
      bottom: 0;
    }
  }
}
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////







// #setting{
//   .line{
//     display: flex;
//     flex-direction: column;
//     margin: 0 10px;
//     width: calc(100% - 20px);
//     height: 100%;
//     overflow: hidden; 
//     color: #0008;
//     &:nth-child(1){margin-top: 10px}
//     &>p{padding: 10px;}
//     &>hr{
//       height: 2px;
//       margin: 10px 0; 
//       border: 0;
//     }
//     div[content]{  
//       &>p{margin-top: 10px;}
//       .tagsAdd{
//         width: 100%;
//         display: grid;
//         grid-template-columns: 1fr 177.25px;
//         grid-template-rows: 28px;
//         margin-top: 5px;
//         padding: 5px 5px 0 5px;
//         gap: 5px;
//         &>input{
//           border: 0;
//           padding: 0 10px;
//           font-size: 14px;
//           font-weight: bold;
//           &::placeholder{color: #0006}
//         }
//         &>.tagAdd{
//           @include flexCC;
//           cursor: pointer;
//           color: #0006;
//           &:before{
//             content: "";
//             width: 177.25px;
//             height: 28px;
//             position: absolute;
//           }
//           &:hover{
//             color: #0008;
//             &:before{background: #0001;}
//           }
//           &:active{
//             color: #000a;
//             &:before{background: #fff1;}
//           }          
//         }
//       }
//       .tagsBox{
//         display: grid;
//         grid-template-columns: repeat(4, 1fr);
//         gap: 5px;
//         padding: 5px;
//         .tag{
//           height: fit-content;
//           padding: 5px 8px;
//           color: #0006;
//           display: flex;
//           position: relative;
//           tagname{
//             width: calc(100% - 24px);
//             text-align: start;
//           }
//           del{
//             width: 16px;
//             height: 16px;
//             position: absolute;
//             right: 8px;
//             margin-top: 1px;
//             background: #0006;
//             border-radius: 2px;
//             cursor: pointer;
//             &:hover{background: #800;}
//             &:active{background: #600;}
//           }
//         }
//       }
//     }
//     div[table]{
//       display: grid;
//       &[grid="graphAll"]>div:not(.tagsBox)>p{text-align: start}
//       &[grid]{
//         grid-auto-rows: 100px; 
//         grid-template-columns: repeat(7, 1fr);
//       }
//       &>div:not(.tagsBox){
//         @include flexCC;
//         flex-direction: column;
//         &>p{width: 100%}
//       }
//       .linePoint{
//         height: 50px;
//         display: flex;
//         &>div:nth-child(2){
//           width: 25px;
//           height: 50px;
//           &>p{
//             @include flexCC;
//             width: 23px;
//             height: 23px;
//             cursor: pointer;
//             position: relative;
//             background: #0002;
//             margin-left: 3px;
//             box-shadow: inset 0 0 0 1px #0004;
//             &[pm="1"]{margin-bottom: 4px;}
//             &[pm="0"]:hover{background: #800}
//           }
//         }
//       }
//       .point{
//         @include flexCC;
//         width: 50px;
//         height: 50px;
//         transition: .1s;
//         background-color: #0001;
//         color: #0004;
//         box-shadow: inset 0 0 0 1px #0004;
//         cursor: default;
//         &:after{
//           @include flexCC;
//           position: absolute;
//           height: 48px;
//           width: 48px;
//           color: #0009
//         }
//         &[yesno="1"]:after{content: "Да"}
//         &[yesno="0"]:after{content: "Нет"}
//       }      
//     }
//   }
// }


// #fbi h4{
//   position: relative;
//   height: 36px;
//   padding: 10px;
// }


// #fbi h4 a[date]:after{font-size: 16px;}
// #fbi h4 a[date]{
//   position: absolute;
//   left: 15px;
//   top: 10px;
// }




// a[streamer]{width: 100%;}
// li:hover .delete{display: flex}
// #fbi li div[num]{height: 35px;}





// .twitchInfo{
//   height: 50px;
//   position: absolute;
//   left: 0;
//   top: 0;
//   display: flex;
//   a[type]{
//     height: 50px;
//     width: 40px;
//     margin-right: 10px;
//     left: 0;
//     top: 0;
//     display: flex;
//     justify-content: center;
//     align-items: flex-end;
//     font-weight: bold;
//     font-size: 75%;
//     cursor: pointer;
//     padding-bottom: 3px;
//     &[type="tag"]{order: 3}
//     &[type="notes"]{order: 2}
//     &[type="fbi"]{order: 1}
//     &:hover:after{opacity: .25}
//     &:after{
//       @include flexCC;
//       content: "";
//       position: absolute;
//       top: 0;
//       @include bgC;
//       width: 40px;
//       height: 50px;
//       opacity: .1;   
//     }
//     &[type="tag"]:after{
//       background-image: url(https://image.flaticon.com/icons/png/512/1873/1873920.png);
//       background-size: 32px;
//     }
//     &[type="notes"]:after{
//       background-image: url(https://image.flaticon.com/icons/svg/2119/2119695.svg);
//       background-size: 32px;
//     }
//     &[type="fbi"]:after{
//       background-image: url(https://image.flaticon.com/icons/svg/1039/1039481.svg);
//     }
//   }
// }





// #fbi li h8>div{width: 100%; display: flex}
// #fbi li h8>div:hover{background: #0003}
// #fbi li h8 div:hover>a{padding: 10px 5px}
// #fbi li h8 div[delete]:hover:after{opacity: .5}
// #fbi li h8 div[delete]{
//   height: inherit;
//   width: 30px;
//   padding: 10px;
//   cursor: pointer;
//   position: relative;
// }
// #fbi li h8 div[delete]:after{
//   content: "";
//   height: 100%;
//   width: inherit;
//   position: absolute;
//   left: 0;
//   top: 0;
//   opacity: 0;
//   background-image: url('https://image.flaticon.com/icons/svg/32/32178.svg');
//   background-size: 10px;
//   background-position: center;
//   background-repeat: no-repeat
// }



// #stats[fbi] li{flex-direction: row;}
// #stats[fbi] h4{
//   width: 200px;
//   height: 100%;
// }
// #stats[fbi] h8{
//   justify-content: start;
//   padding: 10px;
// }
// #stats[fbi] h8:after{content: ""}
// #stats[fbi] h4 a:after{content: ""}



// #stats li h8:after{
//   content: attr(meme)" ["attr(sum)"]";
//   position: absolute;
//   top: 53px;
//   transition: .25s;
//   right: 40px;
//   font-weight: bold;
//   color: #0006
// }

































[class^="ndis"], .ndis{display:none}
// .exampleColor{height: 18px; opacity: 0; transition: .5s; margin-bottom: 2px}
div[table]:hover>div{opacity: 1}
// .smile{margin-bottom: -5px; max-height: 24px;}
// .close{background-image: url(https://cdn.glitch.com/6071b2e0-8e18-43d9-becd-4591bcf616db%2Fclose.png?v=1571684345965); opacity: .25}
// .close:hover{opacity: .75}

